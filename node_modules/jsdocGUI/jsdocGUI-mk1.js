var constants = require('./constants.js'),
	path = require('path'),
	fs = require('fs')
;

function format(format, data){
	var tag, r;
	for(tag in data){
		if(data.hasOwnProperty(tag)){
			r = new RegExp('%' + tag + '%', 'gi');
			format = format.replace(r, data[tag]);
		}
	}

	return format;
}

function make(opts){

	var args = format(constants.jsdocArgs, opts),
		child_process = require('child_process'),
		jsdoc,
		command = constants.jsdocExec + ' ' + args
	;
	command = constants.jsdocExec + ' -X -r ' + opts.INPUT_DIR + ' > file.log 2>&1'
	command = constants.jsdocExec + ' -X -r ' + opts.INPUT_DIR
//		command = path.normalize( process.cwd() + '/test.bat')

	console.log('\tExecuting: ' + command);
	console.log('');
	console.log('');

	jsdoc = child_process.exec(
		command,
		{
			maxBuffer: 2000000,
			encoding: 'utf-8'
		},
		function(error, stdout, stderr){
			var data = JSON.parse(stdout.toString());
			console.log('Founded: ' + data.length.toString() + ' doclets!');
		}
	);
	jsdoc.on('error', function(){
		console.log('error');
		console.log(arguments);
	});
	jsdoc.on('message', function(){
		console.log('message');
		console.log(arguments);
	});
	jsdoc.on('exit', function(){
		
		
//		fs.readFile('file.log', function(err, buffer){
//			var data = JSON.parse(buffer.toString());
//			
//			console.log(data.length);
//		});
		
		console.log('exit');
		console.log(arguments);
		console.log('');
		console.log('I\'m Done!');

	});

};

console.log('Initializing JsDOC GUI MK1...');
make({
	'TEMPLATE': 'jsdocGUILink',
	'OUTPUT_DIR': path.resolve(process.cwd() + '/out'),
	'INPUT_DIR': path.resolve(process.cwd() + '/../jsdoc3_test_code/src')
});