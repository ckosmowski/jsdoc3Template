var TAFFY = require('taffydb').taffy,
	path = require('path'),
	SourceFiles = function(publisher){
		this.publisher = publisher;
		this.dbFiles = TAFFY();
		this.db = this.publisher.db;
	}
;

SourceFiles.prototype = {
	publisher: null,
	dbFiles: null,
	db: null,
	
	addFile: function(realPath){
		var shortPath = path.relative(realPath, this.publisher.input)
							.replace(/\\/g, '/'),
			filehtml = 'files/' + shortPath.replace(/\W\s/g, '_') + '.html'
		;
		if(!this.fileExists(realPath)){

			this.publisher.registerLink({
				id: shortPath,
				name: shortPath,
				href: filehtml,
				kind: 'file'
			});
			
			this.db.insert({ // used to process Files!
				name: shortPath,
				realPath: realPath,
				shortPath: shortPath,
				href: filehtml
			});
			
			
		}
		
		return shortPath;
	},
	
	/**
	 * @desc When a file have a documentation header needs to be documentated
	 * but if the file don't have this header, the filehtml will be generated 
	 * any way
	 */
	addDocletToFile: function(doclet){
		
		console.log('DOCLET FOR FILE!', doclet);
		
	}
};

module.exports = SourceFiles;